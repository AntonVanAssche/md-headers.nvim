*md-headers.txt*  Navigate between Mardown headings with ease from within Neovim.
*MDHeaders*

License: MIT
Author: Anton Van Assche <https://github.com/AntonVanAssche/>

===============================================================================
CONTENTS                                                         *MDHeaders-TOC*

    1. Commands.............|md-headers-commands|
    2. Configuration........|md-headers-configuration|

===============================================================================
1. Commands                                                  *MDHeadersCommands*

MDHeaders                                                           *:MDHeaders*

  Opens a floating window displaying a list of headings in the current
  buffer, which includes both Markdown and HTML headings. The user's
  cursor is placed on the first heading in the list.

  Use `<CR>` to navigate to the selected heading, and `q` or `<Esc>` to
  close the window.

  Reqommended keybinding:
>
    vim.keymap.set(
      'n',
      '<leader>mh',
      '<cmd>MDHeaders<CR>',
      { silent = true }
    )
<

MDHeadersCurrent                                             *:MDHeadersCurrent*

  Opens a floating window that displays a list of headings from the
  current buffer. This list includes both Markdown and HTML headings.
  The cursor is automatically positioned on the heading corresponding to
  the section where the user is currently editing.

  Use `<CR>` to navigate to the selected heading, and `q` or `<Esc>` to
  close the window.

  Reqommended keybinding:
>
    vim.keymap.set(
      'n',
      '<leader>mc',
      '<cmd>MDHeadersCurrent<CR>',
      { silent = true }
    )
<

===============================================================================
2. Configuration                                        *MDHeadersConfiguration*

  MDHeaders can be configured by calling its `setup` function.
  To verify your configuration for Markdown Headers, run a health
  check using `:checkhealth md-headers`.

>
  require("md-headers").setup {
    width = 60,
    height = 10,
    borderchars = { "─", "│", "─", "│", "╭", "╮", "╯", "╰" },
    popup_auto_close = true, -- or false
    highlight_groups = {
      title = {
        fg = nil,
        bg = nil,
      },
      border = {
        fg = nil,
        bg = nil,
      },
      text = {
        fg = nil,
        bg = nil,
      },
    },
  }
<

`width`:
  Adjust the width of the Markdown Headers popup window using the `width`
  setting.

  For example, setting the width to '100' makes the popup window 100
  columns wide.

`height`:
  Adjust the height of the Markdown Headers popup window with the `height`
  setting.

  For example, setting the height to '30' results in a popup window that
  is 30 lines high.

`borderchars`:
  Customize the characters used to draw the border around the popup window
  using the `borderchars` setting.

  For example, setting borderchars to { '', '', '', '', '', '', '', '' }
  results in a borderless popup window.

`popup_auto_close`:
  Specify whether the popup window should automatically close after
  selecting a heading using the `popup_auto_close` setting.

  For example, setting `popup_auto_close` to `false` will NOT automatically
  close the popup window after selecting a heading.

`highlight_groups`:
  Customize the colors used to highlight the title, border, and text within
  the popup window using the `highlight_groups` setting.
  For example, setting `highlight_groups` to the following:

>
  highlight_groups = {
    title = {
      fg = "#e06c75",
      bg = "#1e222a",
    },
    border = {
      fg = "#61afef",
      bg = "#1e222a",
    },
    text = {
      fg = "#abb2bf",
      bg = "#1e222a",
    },
  }
<

===============================================================================
vim:tw=78:ts=2:sts=2:sw=2:ft=help:norl:
