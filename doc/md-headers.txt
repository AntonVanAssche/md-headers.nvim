*md-headers*  Navigate between Mardown headings with ease.

Minimum version of neovim: nightly

Author(s):
  Anton Van Assche <vanasscheanton@gmail.com>
  https://github.com/AntonVanAssche/md-headers.nvim/graphs/contributors

                                                        Table of Contents: gO
===============================================================================
INTRODUCTION                                                 *md-headers-intro*

md-headers utilizes Neovim's Treesitter to provide a fast and efficient way
to navigate Markdown and HTML headings, offering features like quick jumping,
a comprehensive heading list, and full customization to streamline your
workflow.

===============================================================================
COMMANDS                                                  *md-headers-commands*

                                                                   *:MDHeaders*
:MDHeaders
:lua require('md-headers').markdown_headers(false)

Opens a floating window displaying a list of headings in the current buffer,
which includes both Markdown and HTML headings. The user's cursor is placed
on the first heading in the list.

                                                            *:MDHeadersCurrent*
:MDHeadersCurrent
:lua require('md-headers').markdown_headers(true)

Opens a floating window that displays a list of headings from the current
buffer. This list includes both Markdown and HTML headings. The cursor is
automatically positioned on the heading corresponding to the section where
the user is currently editing.

                                                           *:MDHeadersQuickfix*
:MDHeadersQuickfix
:lua require('md-headers').quickfix()

Open a quickfix window with a list of headings in the current buffer. This
list includes both Markdown and HTML headings. Calling this command again
will close the quickfix window. Making it act as a toggle.

                                                          *:MDHeadersTelescope*
:MDHeadersTelescope

See |md-headers-telescope| for more information.

===============================================================================
DEPRECATIONS                                          *md-headers-deprecations*

The following commands have been marked as deprecated and will be removed in
future versions of the plugin. Please update your configuration to use the
new commands.

:MarkdownHeaders            Superceded by :MDHeaders
:MarkdownHeadersClosest     Superceded by :MDHeadersCurrent

===============================================================================
TELESCOPE INTEGRATION                                    *md-headers-telescope*

Markdown Headers provides a Telescope extension to quickly navigate to
headings in a Markdown file. This is useful for large files where headings
act as an outline. Requires `telescope.nvim` to be installed.

As any other Telescope extension, you can call it with the following command:

>
  :Telescope md-headers headings
<

However, the plugin provides an alias for this command:

>
  :MDHeadersTelescope
<

Both commands will open a Telescope picker showing all headings in the current
buffer, with their depth and text. Select a heading to jump to that section.
If no headings are found, a warning message is shown.

===============================================================================
CONFIGURATION                                        *md-headers-configuration*

                                             *md-headers-configuration-options*
CONFIGURATION OPTIONS

md-headers is fully customizable through its configuration options. Below is
the default configuration table. Users can override these options in their
Neovim setup to better fit their workflow.

Default configuration:

>
  {
    width = 60,                      -- Width of the floating window
    height = 10,                     -- Height of the floating window
    borderchars = {                  -- Characters used for the window border
      "─", "│", "─", "│", "╭", "╮", "╯", "╰"
    },
    popup_auto_close = true,         -- Automatically close popup after use
    win_options = {                  -- Window options for the floating window
      number = false,                -- Disable line numbers
      relativenumber = false,        -- Disable relative line numbers
      cursorline = true,             -- Enable cursor line highlighting
    },
    highlight_groups = {             -- Highlight groups for customization
      title = { fg = nil, bg = nil },  -- Title text foreground/background
      border = { fg = nil, bg = nil }, -- Border foreground/background
      text = { fg = nil, bg = nil },   -- Text foreground/background
    },
  }
<

                                               *md-headers-configuration-setup*
CONFIGURATION SETUP

To modify the default settings, add the following to your Neovim
configuration:

>
  require('md-headers').setup {
    width = 80,
    height = 15,
    borderchars = { "-", "|", "-", "|", "+", "+", "+", "+" },
    popup_auto_close = false,
    win_options = {
      number = true,
      relativenumber = false,
      cursorline = true,
    },
    highlight_groups = {
      title = { fg = "#FF0000", bg = nil },
      border = { fg = "#00FF00", bg = nil },
      text = { fg = "#0000FF", bg = nil },
    },
  }
<

This setup example customizes the floating window size, changes the border
characters, disables automatic popup closing, and applies specific colors to
highlight groups.

                                 *md-headers-configuration-recommended-keymaps*
CONFIGURATION RECOMMENDED KEYMAPS

This plugis does not come with default keymaps. Below are some recommended
keymaps to add to your configuration for a more accessible experience.

>
  local map = vim.api.nvim_set_keymap
  local opts = { noremap = true, silent = true }
  map('n', '<leader>mh', ':MDHeaders<CR>', opts)
  map('n', '<leader>mc', ':MDHeadersCurrent<CR>', opts)
  map('n', '<leader>mq', ':MDHeadersQuickfix<CR>', opts)
  map('n', '<leader>mt', ':MDHeadersTelecope<CR>', opts)
<

===============================================================================
vim:tw=78:ts=2:sts=2:sw=2:ft=help:norl:
